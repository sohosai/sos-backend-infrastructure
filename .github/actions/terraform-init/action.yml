name: terraform init
inputs:
  hostname:
    description: "The remote backend hostname to connect to."
    default: "app.terraform.io"
    required: false
  organization:
    description: "The name of the organization containing the targeted workspace."
    required: true
  workspace_name:
    description: "The name of the remote workspace to use."
    required: true
  nix-shell:
    description: "Whether to use nix-shell or not."
    default: "true"
    required: false
  token:
    description: "The token used to authenticate with the remote backend."
    required: true
runs:
  using: "composite"
  steps:
    - shell: bash --noprofile --norc -euo pipefail {0}
      run: |
        tmp_config=$(mktemp XXXXX.hcl)
        touch "$tmp_config"
        chmod 600 "$tmp_config"

        cat << 'EOS' > "$tmp_config"
        hostname = "${{ inputs.hostname }}"
        organization = "${{ inputs.organization }}"
        token = "${{ inputs.token }}"
        workspaces { name = "${{ inputs.workspace_name }}" }
        EOS

        set +e
        if [ "${{ inputs.nix-shell }}" = "true" ]; then
          nix-shell --run "terraform init -backend-config='$tmp_config'"
        else
          terraform init -backend-config="$tmp_config"
        fi
        rm -f "$tmp_config"
      env:
        TF_IN_AUTOMATION: true
