name: Download an artifact
inputs:
  name:
    description: "The name of artifact to download."
    required: true
  workflow:
    description: "The name of workflow that the artifact is stored."
    required: true
  github-token:
    description: "the GITHUB_TOKEN secret."
    required: true
runs:
  using: "composite"
  steps:
    - env:
        NAME: "${{ inputs.name }}"
        WORKFLOW: "${{ inputs.workflow }}"
        GITHUB_TOKEN: "${{ inputs.github-token }}"
      shell: bash --noprofile --norc -euo pipefail {0}
      # TODO: Pagination
      run: |
        runs_output=$(
          curl -fsS -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$WORKFLOW/runs"
        )

        for run_idx in $(seq $(jq '.workflow_runs | length' <<< "$runs_output")); do
          run_id=$(jq ".workflow_runs[$run_idx - 1].id" <<< "$runs_output")

          artifacts_output=$(
            curl -fsS -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/artifacts"
          )
          for artifact_idx in $(seq $(jq '.artifacts | length' <<< "$artifacts_output")); do
            artifact_name=$(jq -r ".artifacts[$artifact_idx - 1].name" <<< "$artifacts_output")
            if [ "$artifact_name" != "$NAME" ]; then
              continue
            fi

            artifact_id=$(jq ".artifacts[$artifact_idx - 1].id" <<< "$artifacts_output")
            tmp_out=$(mktemp)
            curl -fsSL -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$artifact_id/zip" \
              -o "$tmp_out"
            unzip "$tmp_out"

            rm -f "$tmp_out"
            exit 0
          done

          sleep 1
        done

        1>&2 echo "The artifact could not be found"
        exit 1
